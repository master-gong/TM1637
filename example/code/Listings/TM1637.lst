C51 COMPILER V9.60.0.0   TM1637                                                            06/23/2022 11:02:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TM1637
OBJECT MODULE PLACED IN .\Objects\TM1637.obj
COMPILER INVOKED BY: D:\Keil_v5_c51\C51\BIN\C51.EXE Bsp\tm1637\TM1637.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Bsp;.\Bsp\disp
                    -_i2c;.\Bsp\tm1637) DEBUG OBJECTEXTEND PRINT(.\Listings\TM1637.lst) TABS(2) OBJECT(.\Objects\TM1637.obj)

line level    source

   1          /**
   2          * @file      TM1637.c
   3          * @brief     TM1637/GN1637 驱动程序.
   4          * @author    mastergong
   5          * @date      2022-06-23
   6          * @version   001
   7          * @copyright -
   8          */
   9          #include "tm1637.h"
  10          
  11          
  12          //此码表只适合描述中模组， 不同连接方式码表不同
  13          const char seg_code[]={
  14          0x3F,  /* 0:  0 */
  15          0x06,  /* 1:  1 */
  16          0x5B,  /* 2:  2 */
  17          0x4F,  /* 3:  3 */
  18          0x66,  /* 4:  4 */
  19          0x6D,  /* 5:  5 */
  20          0x7D,  /* 6:  6 */
  21          0x07,  /* 7:  7 */
  22          0x7F,  /* 8:  8*/
  23          0x6F,  /* 9:  9 */
  24          0x77,  /* 10: A */
  25          0x7C,  /* 11: B */
  26          0x39,  /* 12: C */
  27          0x5E,  /* 13: d */
  28          0x79,  /* 14: E */
  29          0x71,  /* 15: F */
  30          0x76,  /* 16: H */
  31          0x38,  /* 17: L */
  32          0x50,  /* 18: r */
  33          0x73,  /* 19：p */
  34          0x37,  /* 20：N */
  35          0x40,  /* 21: - 中- */
  36          0x01,  /* 22：- 上- */
  37          0x08,  /* 23：_ 下- */
  38          0x63,  /* 24：o 上o */
  39          0x5C,  /* 25：o 下o */
  40          0x3E,  /* 26: U */
  41          0x58,  /* 27：c */
  42          0x6B,  /* 28：上o 下-*/
  43          0x5D,  /* 29：下o 上-*/
  44          0x00,  /* 30：  */
  45          };
  46          
  47          #define SECOND_CODE 0x80
  48          
  49          
  50          
  51          //反转
  52          static char code_reversed(char segCode)
  53          {
  54   1        char res_data=0;
C51 COMPILER V9.60.0.0   TM1637                                                            06/23/2022 11:02:00 PAGE 2   

  55   1        if((segCode&0x01)==0x01){
  56   2          res_data|=0x08;
  57   2        } 
  58   1      
  59   1        if((segCode&0x02)==0x02){
  60   2          res_data|=0x10;
  61   2        }               
  62   1      
  63   1        if((segCode&0x04)==0x04){
  64   2          res_data|=0x20;
  65   2        }           
  66   1             
  67   1        if((segCode&0x08)==0x08){
  68   2          res_data|=0x01;
  69   2        }       
  70   1      
  71   1        if((segCode&0x10)==0x10){
  72   2          res_data|=0x02;
  73   2        }       
  74   1      
  75   1        if((segCode&0x20)==0x20){
  76   2          res_data|=0x04;
  77   2        }  
  78   1      
  79   1        if((segCode&0x40)==0x40){
  80   2          res_data|=0x40;
  81   2        }  
  82   1        return res_data;
  83   1      }
  84          
  85          
  86          //镜像
  87          static char code_up_down_mirror(char segCode){
  88   1          char res_data = segCode;
  89   1          res_data &=~ 0x3F;
  90   1      
  91   1          if((segCode&0x01)==0x01){
  92   2              res_data |= 0x08;
  93   2          }
  94   1          if((segCode&0x02)==0x02){
  95   2              res_data |= 0x04;
  96   2          }
  97   1      
  98   1          if((segCode&0x04)==0x04){
  99   2              res_data |= 0x02;
 100   2          }
 101   1      
 102   1          if((segCode&0x08)==0x08){
 103   2              res_data |= 0x01;
 104   2          }
 105   1      
 106   1          if((segCode&0x10)==0x10){
 107   2              res_data |= 0x20;
 108   2          }
 109   1      
 110   1          if((segCode&0x20)==0x20){
 111   2              res_data |= 0x10;
 112   2          }
 113   1      
 114   1          return res_data;
 115   1      }
 116          
C51 COMPILER V9.60.0.0   TM1637                                                            06/23/2022 11:02:00 PAGE 3   

 117          
 118          
 119          //显示接口 
 120          //0.36寸 6位数码管寸
 121          void drive_tm1637_6bit(_disp_buff_st info)
 122          {
 123   1      
 124   1         char buff[7];
 125   1      
 126   1         //--------亮度设置-----------
 127   1         if(info.brightness > 7){
 128   2            info.brightness = 7;
 129   2         }
 130   1          
 131   1         buff[0] = 0x40;
 132   1         
 133   1         TM1637_SET(buff,1);
 134   1         
 135   1      
 136   1         buff[0] = 0xC0;
 137   1         //-------code码赋值----------
 138   1         buff[1] = seg_code[info.grid_data[5]];
 139   1         buff[2] = seg_code[info.grid_data[4]];
 140   1         buff[3] = seg_code[info.grid_data[3]];
 141   1         buff[4] = seg_code[info.grid_data[2]];
 142   1         buff[5] = seg_code[info.grid_data[1]];
 143   1         buff[6] = seg_code[info.grid_data[0]];
 144   1      
 145   1         //-------翻转判断-----------
 146   1         if(info.flip == 0xA5){
 147   2            buff[6] = code_reversed(seg_code[info.grid_data[5]]);
 148   2            buff[5] = code_reversed(seg_code[info.grid_data[4]]);
 149   2            buff[4] = code_reversed(seg_code[info.grid_data[3]]);
 150   2            buff[3] = code_reversed(seg_code[info.grid_data[2]]);
 151   2            buff[2] = code_reversed(seg_code[info.grid_data[1]]);
 152   2            buff[1] = code_reversed(seg_code[info.grid_data[0]]);
 153   2         }
 154   1         
 155   1         //-------镜像判断-----------
 156   1        if(info.mirror == 0xA5){
 157   2            buff[1] = code_up_down_mirror(buff[1]);
 158   2            buff[2] = code_up_down_mirror(buff[2]);
 159   2            buff[3] = code_up_down_mirror(buff[3]);
 160   2            buff[4] = code_up_down_mirror(buff[4]);
 161   2            buff[5] = code_up_down_mirror(buff[5]);
 162   2            buff[6] = code_up_down_mirror(buff[6]);
 163   2        }
 164   1      
 165   1        //-------冒号显示------------
 166   1          if(info.sec_flash){
 167   2             buff[3] |= SECOND_CODE;
 168   2             buff[5] |= SECOND_CODE;
 169   2          }
 170   1          
 171   1          TM1637_SET(buff,7);
 172   1      
 173   1          
 174   1          if(info.off){ //关闭显示
 175   2              buff[0] = 0x80;
 176   2          }else{
 177   2              buff[0] = 0x88 | (info.brightness&0x07);
 178   2          } 
C51 COMPILER V9.60.0.0   TM1637                                                            06/23/2022 11:02:00 PAGE 4   

 179   1      
 180   1          TM1637_SET(buff,1);
 181   1      
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    369    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
